<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.16"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LCOM Project - Asteroids in the LCOM Galaxy: C:/MINIX-LCOM/shared/proj/src/keyboard.c Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LCOM Project - Asteroids in the LCOM Galaxy
   </div>
   <div id="projectbrief">Projeto Final no âmbito da cadeira de LCOM do Grupo 2 da Turma 8</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.16 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8fcf3af88d264e2753b43a2b129ab6b2.html">MINIX-LCOM</a></li><li class="navelem"><a class="el" href="dir_4d7ae0cb0e0623affaa817e25bb7acbe.html">shared</a></li><li class="navelem"><a class="el" href="dir_31342c11a006d2d168239ba88c7630f4.html">proj</a></li><li class="navelem"><a class="el" href="dir_8590e5906b9b4f60d695bfc1a01ddc44.html">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">keyboard.c</div>  </div>
</div><!--header-->
<div class="contents">
<a href="keyboard_8c.html">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160; </div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &lt;lcom/lcf.h&gt;</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="keyboard_8h.html">keyboard.h</a>&quot;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="i8042_8h.html">i8042.h</a>&quot;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">static</span> <span class="keywordtype">int</span> kbc_hook_id = 0x01;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">extern</span> uint8_t <a class="code" href="keyboard_8c.html#a37ef32bc001da7a77c943046acc8470f">scanByte</a>;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">static</span> uint8_t size = 0; <span class="comment">//número de bytes do scandoce</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">static</span> <span class="keywordtype">bool</span> wait = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="keyboard_8c.html#a18c596b224bba98ca524a0bfa9730609">   19</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="keyboard_8c.html#a18c596b224bba98ca524a0bfa9730609">kbc_subscribe_int</a>(uint8_t *bit_no) {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    *bit_no = kbc_hook_id;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keywordflow">return</span> sys_irqsetpolicy(KEYBOARD_IRQ, (IRQ_REENABLE | IRQ_EXCLUSIVE), &amp;kbc_hook_id);</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;}</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="group__keyboard.html#ga0e945987c2233f1c30a645ec5fc750c1">   27</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="group__keyboard.html#ga0e945987c2233f1c30a645ec5fc750c1">kbc_unsubscribe_int</a>(){</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keywordflow">return</span> sys_irqrmpolicy(&amp;kbc_hook_id);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;}</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">* KBC Interrrupt Handler -- API</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="group__keyboard.html#gaafe7ddc583c9b1f7caf5a6c6058dfa9f">   37</a></span>&#160;uint8_t *<a class="code" href="group__keyboard.html#gaafe7ddc583c9b1f7caf5a6c6058dfa9f">kbcIH</a>(){</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="comment">/*The handler should read the status from the status register, </span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">  * to check if there was some communications error, and to read </span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">  * the scancode byte from the output buffer.</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">  */</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  uint8_t stat;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  uint8_t discard;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keywordflow">if</span>(! (<a class="code" href="utils_8c.html#a79a031a8611f5b2d6afa4158e92b0fb4">util_sys_inb</a>(<a class="code" href="group__i8042.html#ga89c4d098b53809674457b1660b1af780">STAT_REG</a>, &amp;stat))){</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="comment">/* loop while 8042 output buffer is empty */</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">if</span>( stat &amp; <a class="code" href="group__i8042.html#ga45967c9e25447ba853cf6fb4ac545fe6">OBF</a> ) {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <a class="code" href="utils_8c.html#a79a031a8611f5b2d6afa4158e92b0fb4">util_sys_inb</a>(<a class="code" href="group__i8042.html#gacfb42dde389e8ca36ab267002fbf5c6a">OUT_BUF</a>, &amp;<a class="code" href="keyboard_8c.html#a37ef32bc001da7a77c943046acc8470f">scanByte</a>);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <a class="code" href="group__keyboard.html#ga32a87659facb7c6ccb58da7a3663fb66">isTwoByte</a>(&amp;wait, &amp;size);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      uint8_t *scanCode;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      scanCode = <a class="code" href="group__keyboard.html#ga7b0c7b81677d1ad01660ca2f58d8aa74">processCode</a>(<a class="code" href="keyboard_8c.html#a37ef32bc001da7a77c943046acc8470f">scanByte</a>, size);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <span class="keywordflow">return</span> scanCode;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    }  </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="utils_8c.html#a79a031a8611f5b2d6afa4158e92b0fb4">util_sys_inb</a>(<a class="code" href="group__i8042.html#gacfb42dde389e8ca36ab267002fbf5c6a">OUT_BUF</a>, &amp;discard); </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">* Assembles the scanCode accordingly with the size</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="group__keyboard.html#ga7b0c7b81677d1ad01660ca2f58d8aa74">   67</a></span>&#160;uint8_t *<a class="code" href="group__keyboard.html#ga7b0c7b81677d1ad01660ca2f58d8aa74">processCode</a>(uint8_t <span class="keywordtype">byte</span>, uint8_t size){</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keyword">static</span> uint8_t scanCode[2];</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  memset(scanCode, 0, <span class="keyword">sizeof</span>(scanCode));</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordflow">if</span>(size == 2){</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    scanCode[0] = <a class="code" href="group__i8042.html#ga73d6572224ad0ac84a8587615cef947c">FIRST_BYTE</a>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    scanCode[1] = byte;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordflow">else</span> scanCode[0] = byte;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  kbd_print_scancode(!((BIT(7) &amp; <span class="keywordtype">byte</span>) &gt;&gt; 7), size, scanCode);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keywordflow">return</span> scanCode; <span class="comment">//return to a pointer -&gt; memory leak????? </span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">* Checks the scancode&#39;s length</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="group__keyboard.html#ga32a87659facb7c6ccb58da7a3663fb66">   87</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__keyboard.html#ga32a87659facb7c6ccb58da7a3663fb66">isTwoByte</a>(<span class="keywordtype">bool</span> *wait, uint8_t *size){</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordflow">if</span>(*wait == <span class="keyword">false</span>){</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="keyboard_8c.html#a37ef32bc001da7a77c943046acc8470f">scanByte</a> == <a class="code" href="group__i8042.html#ga73d6572224ad0ac84a8587615cef947c">FIRST_BYTE</a>){</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      *wait = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      *size = 1;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      *wait = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    *size = 2;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    *wait = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">* Implements the necessary delay, so KBC has enough time to processs</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="group__keyboard.html#gabb9ee10191569258e0f22bdd0a95ba62">  108</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__keyboard.html#gabb9ee10191569258e0f22bdd0a95ba62">delay</a>(){</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  tickdelay(micros_to_ticks(<a class="code" href="group__i8042.html#ga1a522aa19bcb695a9df30032a893bee3">DELAY_US</a>));</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="group__keyboard.html#ga2d0cde3939868bc75d0e02463b096e49">  111</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__keyboard.html#ga2d0cde3939868bc75d0e02463b096e49">delay_poll</a>(uint16_t period){</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  tickdelay(micros_to_ticks(period * 1000));</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="group__keyboard.html#gacfb87f6c099dcb8434ca38d90f8166e2">  115</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="group__keyboard.html#gacfb87f6c099dcb8434ca38d90f8166e2">kbd_wrt_command</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> wr_cm_byte, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> kbc_reenable){</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  uint8_t poll_stat;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> tryCounter = 0; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="comment">// Writing the Command</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment">// Loop while the input buffer is full ; When it&#39;s not, it&#39;s safe to write the command</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">while</span>( 1 ) {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="comment">// Read the status register</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <a class="code" href="utils_8c.html#a79a031a8611f5b2d6afa4158e92b0fb4">util_sys_inb</a>(<a class="code" href="group__i8042.html#ga89c4d098b53809674457b1660b1af780">STAT_REG</a>, &amp;poll_stat);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">if</span>( !(poll_stat &amp; <a class="code" href="group__i8042.html#ga3c48b10907056351582baf9f6478598e">IBF</a>) == 0 ) {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            sys_outb(<a class="code" href="group__i8042.html#ga6d57c7927a10f638c83046b52c8caac9">KBC_CMD_REG</a>, wr_cm_byte); <span class="comment">//KBC_WRITE_COMMAND</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        } <span class="keywordflow">else</span> {    </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            tryCounter++;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="comment">// Check if the maximum number of tries to write in the input buffer was reached</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">if</span> (tryCounter == <a class="code" href="group__i8042.html#gae14eaaed1fe7cdf491da54a714c426b3">MAX_COUNT</a>)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <a class="code" href="group__keyboard.html#gabb9ee10191569258e0f22bdd0a95ba62">delay</a>();</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="comment">// Reset the in-buff writing try counter</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    tryCounter = 0;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="comment">// Writing the Argument</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="comment">// Loop while the input buffer is full ; When it&#39;s not, it&#39;s safe to write the argument</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">while</span>( 1 ) {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="comment">// Read the status register</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <a class="code" href="utils_8c.html#a79a031a8611f5b2d6afa4158e92b0fb4">util_sys_inb</a>(<a class="code" href="group__i8042.html#ga89c4d098b53809674457b1660b1af780">STAT_REG</a>, &amp;poll_stat);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="comment">/* loop while 8042 input buffer is not empty */</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">if</span>( !((poll_stat &amp; <a class="code" href="group__i8042.html#ga3c48b10907056351582baf9f6478598e">IBF</a>) == 0) ) {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            sys_outb(<a class="code" href="group__i8042.html#gaac9289c99cf0a693a211da6d6cb1bb65">KBC_IN_BUF</a>, kbc_reenable);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        } <span class="keywordflow">else</span> {    <span class="comment">// Input Buffer not empty, increment the tryCounter</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            tryCounter++;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="comment">// Check if the maximum number of tries to write in the input buffer was reached</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">if</span> (tryCounter == <a class="code" href="group__i8042.html#gae14eaaed1fe7cdf491da54a714c426b3">MAX_COUNT</a>)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <a class="code" href="group__keyboard.html#gabb9ee10191569258e0f22bdd0a95ba62">delay</a>();  <span class="comment">// wait 20 ms</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="agroup__i8042_html_ga1a522aa19bcb695a9df30032a893bee3"><div class="ttname"><a href="group__i8042.html#ga1a522aa19bcb695a9df30032a893bee3">DELAY_US</a></div><div class="ttdeci">#define DELAY_US</div><div class="ttdoc">Atraso (Delay) de aproximadamente 0.2 segundos.</div><div class="ttdef"><b>Definition:</b> <a href="i8042_8h_source.html#l00046">i8042.h:46</a></div></div>
<div class="ttc" id="autils_8c_html_a79a031a8611f5b2d6afa4158e92b0fb4"><div class="ttname"><a href="utils_8c.html#a79a031a8611f5b2d6afa4158e92b0fb4">util_sys_inb</a></div><div class="ttdeci">int() util_sys_inb(int port, uint8_t *value)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8c_source.html#l00021">utils.c:21</a></div></div>
<div class="ttc" id="akeyboard_8h_html"><div class="ttname"><a href="keyboard_8h.html">keyboard.h</a></div></div>
<div class="ttc" id="agroup__i8042_html_ga73d6572224ad0ac84a8587615cef947c"><div class="ttname"><a href="group__i8042.html#ga73d6572224ad0ac84a8587615cef947c">FIRST_BYTE</a></div><div class="ttdeci">#define FIRST_BYTE</div><div class="ttdoc">Primeiro Byte em scancodes com dois bytes.</div><div class="ttdef"><b>Definition:</b> <a href="i8042_8h_source.html#l00049">i8042.h:49</a></div></div>
<div class="ttc" id="agroup__keyboard_html_ga0e945987c2233f1c30a645ec5fc750c1"><div class="ttname"><a href="group__keyboard.html#ga0e945987c2233f1c30a645ec5fc750c1">kbc_unsubscribe_int</a></div><div class="ttdeci">int kbc_unsubscribe_int()</div><div class="ttdef"><b>Definition:</b> <a href="keyboard_8c_source.html#l00027">keyboard.c:27</a></div></div>
<div class="ttc" id="agroup__i8042_html_ga3c48b10907056351582baf9f6478598e"><div class="ttname"><a href="group__i8042.html#ga3c48b10907056351582baf9f6478598e">IBF</a></div><div class="ttdeci">#define IBF</div><div class="ttdoc">Bit para verificar se o &quot;Input Buffer&quot; está cheio.</div><div class="ttdef"><b>Definition:</b> <a href="i8042_8h_source.html#l00054">i8042.h:54</a></div></div>
<div class="ttc" id="agroup__keyboard_html_ga2d0cde3939868bc75d0e02463b096e49"><div class="ttname"><a href="group__keyboard.html#ga2d0cde3939868bc75d0e02463b096e49">delay_poll</a></div><div class="ttdeci">void delay_poll(uint16_t period)</div><div class="ttdef"><b>Definition:</b> <a href="keyboard_8c_source.html#l00111">keyboard.c:111</a></div></div>
<div class="ttc" id="ai8042_8h_html"><div class="ttname"><a href="i8042_8h.html">i8042.h</a></div></div>
<div class="ttc" id="akeyboard_8c_html_a37ef32bc001da7a77c943046acc8470f"><div class="ttname"><a href="keyboard_8c.html#a37ef32bc001da7a77c943046acc8470f">scanByte</a></div><div class="ttdeci">uint8_t scanByte</div><div class="ttdef"><b>Definition:</b> <a href="game_8c_source.html#l00017">game.c:17</a></div></div>
<div class="ttc" id="agroup__i8042_html_ga45967c9e25447ba853cf6fb4ac545fe6"><div class="ttname"><a href="group__i8042.html#ga45967c9e25447ba853cf6fb4ac545fe6">OBF</a></div><div class="ttdeci">#define OBF</div><div class="ttdoc">Bit para verificar se o &quot;Output Buffer&quot; está cheio.</div><div class="ttdef"><b>Definition:</b> <a href="i8042_8h_source.html#l00055">i8042.h:55</a></div></div>
<div class="ttc" id="agroup__keyboard_html_gaafe7ddc583c9b1f7caf5a6c6058dfa9f"><div class="ttname"><a href="group__keyboard.html#gaafe7ddc583c9b1f7caf5a6c6058dfa9f">kbcIH</a></div><div class="ttdeci">uint8_t * kbcIH()</div><div class="ttdef"><b>Definition:</b> <a href="keyboard_8c_source.html#l00037">keyboard.c:37</a></div></div>
<div class="ttc" id="agroup__i8042_html_ga6d57c7927a10f638c83046b52c8caac9"><div class="ttname"><a href="group__i8042.html#ga6d57c7927a10f638c83046b52c8caac9">KBC_CMD_REG</a></div><div class="ttdeci">#define KBC_CMD_REG</div><div class="ttdoc">KBC command register.</div><div class="ttdef"><b>Definition:</b> <a href="i8042_8h_source.html#l00062">i8042.h:62</a></div></div>
<div class="ttc" id="agroup__i8042_html_gacfb42dde389e8ca36ab267002fbf5c6a"><div class="ttname"><a href="group__i8042.html#gacfb42dde389e8ca36ab267002fbf5c6a">OUT_BUF</a></div><div class="ttdeci">#define OUT_BUF</div><div class="ttdoc">Output Buffer.</div><div class="ttdef"><b>Definition:</b> <a href="i8042_8h_source.html#l00021">i8042.h:21</a></div></div>
<div class="ttc" id="akeyboard_8c_html_a18c596b224bba98ca524a0bfa9730609"><div class="ttname"><a href="keyboard_8c.html#a18c596b224bba98ca524a0bfa9730609">kbc_subscribe_int</a></div><div class="ttdeci">int kbc_subscribe_int(uint8_t *bit_no)</div><div class="ttdef"><b>Definition:</b> <a href="keyboard_8c_source.html#l00019">keyboard.c:19</a></div></div>
<div class="ttc" id="agroup__i8042_html_ga89c4d098b53809674457b1660b1af780"><div class="ttname"><a href="group__i8042.html#ga89c4d098b53809674457b1660b1af780">STAT_REG</a></div><div class="ttdeci">#define STAT_REG</div><div class="ttdoc">Status register.</div><div class="ttdef"><b>Definition:</b> <a href="i8042_8h_source.html#l00018">i8042.h:18</a></div></div>
<div class="ttc" id="agroup__keyboard_html_ga7b0c7b81677d1ad01660ca2f58d8aa74"><div class="ttname"><a href="group__keyboard.html#ga7b0c7b81677d1ad01660ca2f58d8aa74">processCode</a></div><div class="ttdeci">uint8_t * processCode(uint8_t byte, uint8_t size)</div><div class="ttdef"><b>Definition:</b> <a href="keyboard_8c_source.html#l00067">keyboard.c:67</a></div></div>
<div class="ttc" id="agroup__i8042_html_gaac9289c99cf0a693a211da6d6cb1bb65"><div class="ttname"><a href="group__i8042.html#gaac9289c99cf0a693a211da6d6cb1bb65">KBC_IN_BUF</a></div><div class="ttdeci">#define KBC_IN_BUF</div><div class="ttdoc">&quot;Input Buffer&quot; do KBC</div><div class="ttdef"><b>Definition:</b> <a href="i8042_8h_source.html#l00063">i8042.h:63</a></div></div>
<div class="ttc" id="agroup__i8042_html_gae14eaaed1fe7cdf491da54a714c426b3"><div class="ttname"><a href="group__i8042.html#gae14eaaed1fe7cdf491da54a714c426b3">MAX_COUNT</a></div><div class="ttdeci">#define MAX_COUNT</div><div class="ttdoc">Número Máximo de Tentativas para escrever no &quot;Input Buffer&quot;.</div><div class="ttdef"><b>Definition:</b> <a href="i8042_8h_source.html#l00059">i8042.h:59</a></div></div>
<div class="ttc" id="agroup__keyboard_html_gabb9ee10191569258e0f22bdd0a95ba62"><div class="ttname"><a href="group__keyboard.html#gabb9ee10191569258e0f22bdd0a95ba62">delay</a></div><div class="ttdeci">void delay()</div><div class="ttdef"><b>Definition:</b> <a href="keyboard_8c_source.html#l00108">keyboard.c:108</a></div></div>
<div class="ttc" id="agroup__keyboard_html_gacfb87f6c099dcb8434ca38d90f8166e2"><div class="ttname"><a href="group__keyboard.html#gacfb87f6c099dcb8434ca38d90f8166e2">kbd_wrt_command</a></div><div class="ttdeci">int kbd_wrt_command(unsigned char wr_cm_byte, unsigned char kbc_reenable)</div><div class="ttdef"><b>Definition:</b> <a href="keyboard_8c_source.html#l00115">keyboard.c:115</a></div></div>
<div class="ttc" id="agroup__keyboard_html_ga32a87659facb7c6ccb58da7a3663fb66"><div class="ttname"><a href="group__keyboard.html#ga32a87659facb7c6ccb58da7a3663fb66">isTwoByte</a></div><div class="ttdeci">void isTwoByte(bool *wait, uint8_t *size)</div><div class="ttdef"><b>Definition:</b> <a href="keyboard_8c_source.html#l00087">keyboard.c:87</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.16
</small></address>
</body>
</html>
